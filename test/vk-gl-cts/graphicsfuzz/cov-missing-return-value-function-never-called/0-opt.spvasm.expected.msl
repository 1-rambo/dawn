#include <metal_stdlib>

using namespace metal;
struct buf1 {
  /* 0x0000 */ uint one;
};
struct tint_padded_array_element {
  /* 0x0000 */ int el;
  /* 0x0004 */ int8_t tint_pad[12];
};
struct tint_array_wrapper {
  /* 0x0000 */ tint_padded_array_element arr[1];
};
struct buf0 {
  /* 0x0000 */ tint_array_wrapper x_GLF_uniform_int_values;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_2 {
  float4 x_GLF_color_1 [[color(0)]];
};

float func_() {
  switch(1) {
    case 0: {
      return 1.0f;
      break;
    }
    default: {
      break;
    }
  }
  return 0.0f;
}

void main_1(constant buf1& x_8, constant buf0& x_10, thread float4* const tint_symbol_5, thread float4* const tint_symbol_6) {
  float4 v = 0.0f;
  v = float4(1.0f, 1.0f, 1.0f, 1.0f);
  float const x_38 = (*(tint_symbol_5)).y;
  if ((x_38 < 0.0f)) {
    float const x_42 = func_();
    v = float4(x_42, x_42, x_42, x_42);
  }
  float4 const x_44 = v;
  if ((pack_float_to_unorm4x8(x_44) == 1u)) {
    return;
  }
  uint const x_50 = x_8.one;
  if (((1u << x_50) == 2u)) {
    *(tint_symbol_6) = float4(1.0f, 0.0f, 0.0f, 1.0f);
  } else {
    int const x_57 = x_10.x_GLF_uniform_int_values.arr[0].el;
    float const x_58 = float(x_57);
    *(tint_symbol_6) = float4(x_58, x_58, x_58, x_58);
  }
  return;
}

fragment tint_symbol_2 tint_symbol(float4 gl_FragCoord_param [[position]], constant buf1& x_8 [[buffer(1)]], constant buf0& x_10 [[buffer(0)]]) {
  thread float4 tint_symbol_7 = 0.0f;
  thread float4 tint_symbol_8 = 0.0f;
  tint_symbol_7 = gl_FragCoord_param;
  main_1(x_8, x_10, &(tint_symbol_7), &(tint_symbol_8));
  main_out const tint_symbol_3 = {.x_GLF_color_1=tint_symbol_8};
  tint_symbol_2 const tint_symbol_4 = {.x_GLF_color_1=tint_symbol_3.x_GLF_color_1};
  return tint_symbol_4;
}

