; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 139
; Schema: 0
               OpCapability Shader
         %37 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %tint_symbol_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color "x_GLF_color"
               OpName %buf1 "buf1"
               OpMemberName %buf1 0 "x_GLF_uniform_int_values"
               OpName %x_8 "x_8"
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "x_GLF_uniform_float_values"
               OpName %x_10 "x_10"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpName %main_1 "main_1"
               OpName %f0 "f0"
               OpName %s1 "s1"
               OpName %f1 "f1"
               OpName %x_72 "x_72"
               OpName %x_73_phi "x_73_phi"
               OpName %x_62 "x_62"
               OpName %x_71 "x_71"
               OpName %x_63_phi "x_63_phi"
               OpName %x_72_phi "x_72_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %tint_symbol_2 "tint_symbol_2"
               OpName %tint_symbol "tint_symbol"
               OpName %main "main"
               OpDecorate %buf1 Block
               OpMemberDecorate %buf1 0 Offset 0
               OpDecorate %_arr_int_uint_2 ArrayStride 16
               OpDecorate %x_8 NonWritable
               OpDecorate %x_8 DescriptorSet 0
               OpDecorate %x_8 Binding 1
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %_arr_float_uint_1 ArrayStride 16
               OpDecorate %x_10 NonWritable
               OpDecorate %x_10 DescriptorSet 0
               OpDecorate %x_10 Binding 0
               OpDecorate %tint_symbol_1 Location 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Private_v4float = OpTypePointer Private %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
     %uint_2 = OpConstant %uint 2
%_arr_int_uint_2 = OpTypeArray %int %uint_2
       %buf1 = OpTypeStruct %_arr_int_uint_2
%_ptr_Uniform_buf1 = OpTypePointer Uniform %buf1
        %x_8 = OpVariable %_ptr_Uniform_buf1 Uniform
     %uint_1 = OpConstant %uint 1
%_arr_float_uint_1 = OpTypeArray %float %uint_1
       %buf0 = OpTypeStruct %_arr_float_uint_1
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
       %x_10 = OpVariable %_ptr_Uniform_buf0 Uniform
%_ptr_Output_v4float = OpTypePointer Output %v4float
%tint_symbol_1 = OpVariable %_ptr_Output_v4float Output %5
       %void = OpTypeVoid
         %20 = OpTypeFunction %void
%_ptr_Function_float = OpTypePointer Function %float
         %26 = OpConstantNull %float
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %32 = OpConstantNull %bool
   %float_10 = OpConstant %float 10
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
%float_0x1_b38fb8pn127 = OpConstant %float 0x1.b38fb8p-127
    %float_0 = OpConstant %float 0
    %float_1 = OpConstant %float 1
%float_0_99000001 = OpConstant %float 0.99000001
%float_0_00999999978 = OpConstant %float 0.00999999978
     %uint_0 = OpConstant %uint 0
      %int_1 = OpConstant %int 1
%_ptr_Uniform_int = OpTypePointer Uniform %int
      %int_0 = OpConstant %int 0
   %main_out = OpTypeStruct %v4float
        %127 = OpTypeFunction %void %main_out
     %main_1 = OpFunction %void None %20
         %23 = OpLabel
         %f0 = OpVariable %_ptr_Function_float Function %26
         %s1 = OpVariable %_ptr_Function_float Function %26
         %f1 = OpVariable %_ptr_Function_float Function %26
       %x_72 = OpVariable %_ptr_Function_bool Function %32
   %x_73_phi = OpVariable %_ptr_Function_bool Function %32
       %x_62 = OpVariable %_ptr_Function_bool Function %32
       %x_71 = OpVariable %_ptr_Function_bool Function %32
   %x_63_phi = OpVariable %_ptr_Function_bool Function %32
   %x_72_phi = OpVariable %_ptr_Function_bool Function %32
         %38 = OpFDiv %float %float_10 %float_9_99999997en07
         %36 = OpExtInst %float %37 Floor %38
         %39 = OpFMul %float %float_9_99999997en07 %36
         %40 = OpFSub %float %float_10 %39
               OpStore %f0 %40
               OpStore %s1 %float_0x1_b38fb8pn127
         %42 = OpLoad %float %s1
         %44 = OpFOrdEqual %bool %42 %float_0
               OpSelectionMerge %45 None
               OpBranchConditional %44 %46 %45
         %46 = OpLabel
               OpStore %s1 %float_1
               OpBranch %45
         %45 = OpLabel
         %52 = OpLoad %float %s1
         %54 = OpFDiv %float %float_10 %52
         %53 = OpExtInst %float %37 Floor %54
         %55 = OpFMul %float %52 %53
         %56 = OpFSub %float %float_10 %55
               OpStore %f1 %56
         %57 = OpLoad %float %f1
         %58 = OpLoad %float %s1
         %59 = OpIsInf %bool %57
               OpSelectionMerge %60 None
               OpBranchConditional %59 %60 %61
         %61 = OpLabel
         %62 = OpFOrdEqual %bool %58 %float_1
               OpBranch %60
         %60 = OpLabel
         %63 = OpPhi %bool %59 %45 %62 %61
               OpStore %x_73_phi %63
         %64 = OpLogicalNot %bool %63
               OpSelectionMerge %65 None
               OpBranchConditional %64 %66 %65
         %66 = OpLabel
         %67 = OpLoad %float %f0
         %68 = OpLoad %float %f1
         %69 = OpFOrdEqual %bool %67 %68
               OpStore %x_63_phi %69
         %70 = OpLogicalNot %bool %69
               OpSelectionMerge %71 None
               OpBranchConditional %70 %72 %71
         %72 = OpLabel
         %73 = OpLoad %float %f0
         %74 = OpLoad %float %f0
         %76 = OpFOrdGreaterThan %bool %73 %float_0_99000001
               OpSelectionMerge %77 None
               OpBranchConditional %76 %78 %77
         %78 = OpLabel
         %80 = OpFOrdLessThan %bool %74 %float_0_00999999978
               OpBranch %77
         %77 = OpLabel
         %81 = OpPhi %bool %76 %72 %80 %78
               OpStore %x_62 %81
         %82 = OpLoad %bool %x_62
               OpStore %x_63_phi %82
               OpBranch %71
         %71 = OpLabel
         %83 = OpLoad %bool %x_63_phi
               OpStore %x_72_phi %83
         %84 = OpLogicalNot %bool %83
               OpSelectionMerge %85 None
               OpBranchConditional %84 %86 %85
         %86 = OpLabel
         %87 = OpLoad %float %f1
         %88 = OpLoad %float %f1
         %89 = OpFOrdGreaterThan %bool %87 %float_0_99000001
               OpSelectionMerge %90 None
               OpBranchConditional %89 %91 %90
         %91 = OpLabel
         %92 = OpFOrdLessThan %bool %88 %float_0_00999999978
               OpBranch %90
         %90 = OpLabel
         %93 = OpPhi %bool %89 %86 %92 %91
               OpStore %x_71 %93
         %94 = OpLoad %bool %x_71
               OpStore %x_72_phi %94
               OpBranch %85
         %85 = OpLabel
         %95 = OpLoad %bool %x_72_phi
               OpStore %x_72 %95
         %96 = OpLoad %bool %x_72
               OpStore %x_73_phi %96
               OpBranch %65
         %65 = OpLabel
         %97 = OpLoad %bool %x_73_phi
         %98 = OpLoad %float %f1
               OpSelectionMerge %99 None
               OpBranchConditional %97 %99 %100
        %100 = OpLabel
        %101 = OpFOrdEqual %bool %98 %float_10
               OpBranch %99
         %99 = OpLabel
        %102 = OpPhi %bool %97 %65 %101 %100
               OpSelectionMerge %103 None
               OpBranchConditional %102 %104 %105
        %104 = OpLabel
        %109 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_1
        %110 = OpLoad %int %109
        %112 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_0
        %113 = OpLoad %int %112
        %114 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_0
        %115 = OpLoad %int %114
        %116 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_1
        %117 = OpLoad %int %116
        %118 = OpConvertSToF %float %110
        %119 = OpConvertSToF %float %113
        %120 = OpConvertSToF %float %115
        %121 = OpConvertSToF %float %117
        %122 = OpCompositeConstruct %v4float %118 %119 %120 %121
               OpStore %x_GLF_color %122
               OpBranch %103
        %105 = OpLabel
        %123 = OpAccessChain %_ptr_Uniform_int %x_8 %uint_0 %int_0
        %124 = OpLoad %int %123
        %125 = OpConvertSToF %float %124
        %126 = OpCompositeConstruct %v4float %125 %125 %125 %125
               OpStore %x_GLF_color %126
               OpBranch %103
        %103 = OpLabel
               OpReturn
               OpFunctionEnd
%tint_symbol_2 = OpFunction %void None %127
%tint_symbol = OpFunctionParameter %main_out
        %131 = OpLabel
        %132 = OpCompositeExtract %v4float %tint_symbol 0
               OpStore %tint_symbol_1 %132
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %20
        %134 = OpLabel
        %135 = OpFunctionCall %void %main_1
        %137 = OpLoad %v4float %x_GLF_color
        %138 = OpCompositeConstruct %main_out %137
        %136 = OpFunctionCall %void %tint_symbol_2 %138
               OpReturn
               OpFunctionEnd
