; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 48
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %tint_symbol_1
               OpExecutionMode %main OriginUpperLeft
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_5 "x_5"
               OpName %x_GLF_color "x_GLF_color"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpName %main_1 "main_1"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %tint_symbol_2 "tint_symbol_2"
               OpName %tint_symbol "tint_symbol"
               OpName %main "main"
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_5 NonWritable
               OpDecorate %x_5 DescriptorSet 0
               OpDecorate %x_5 Binding 0
               OpDecorate %tint_symbol_1 Location 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_5 = OpVariable %_ptr_Uniform_buf0 Uniform
    %v4float = OpTypeVector %float 4
%_ptr_Private_v4float = OpTypePointer Private %v4float
          %9 = OpConstantNull %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %9
%_ptr_Output_v4float = OpTypePointer Output %v4float
%tint_symbol_1 = OpVariable %_ptr_Output_v4float Output %9
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
       %bool = OpTypeBool
     %v2bool = OpTypeVector %bool 2
      %false = OpConstantFalse %bool
         %25 = OpConstantComposite %v2bool %false %false
    %float_1 = OpConstant %float 1
         %27 = OpConstantComposite %v2float %float_1 %float_1
    %float_0 = OpConstant %float 0
         %34 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
         %35 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
         %36 = OpTypeFunction %void %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
         %19 = OpAccessChain %_ptr_Uniform_v2float %x_5 %uint_0
         %20 = OpLoad %v2float %19
         %21 = OpSelect %v2float %25 %27 %20
         %28 = OpCompositeExtract %float %21 0
         %30 = OpFOrdEqual %bool %28 %float_0
               OpSelectionMerge %31 None
               OpBranchConditional %30 %32 %33
         %32 = OpLabel
               OpStore %x_GLF_color %34
               OpBranch %31
         %33 = OpLabel
               OpStore %x_GLF_color %35
               OpBranch %31
         %31 = OpLabel
               OpReturn
               OpFunctionEnd
%tint_symbol_2 = OpFunction %void None %36
%tint_symbol = OpFunctionParameter %main_out
         %40 = OpLabel
         %41 = OpCompositeExtract %v4float %tint_symbol 0
               OpStore %tint_symbol_1 %41
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %12
         %43 = OpLabel
         %44 = OpFunctionCall %void %main_1
         %46 = OpLoad %v4float %x_GLF_color
         %47 = OpCompositeConstruct %main_out %46
         %45 = OpFunctionCall %void %tint_symbol_2 %47
               OpReturn
               OpFunctionEnd
