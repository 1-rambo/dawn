#include <metal_stdlib>

using namespace metal;
struct buf0 {
  /* 0x0000 */ int two;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_1 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_7, thread float4* const tint_symbol_4) {
  int i = 0;
  int r = 0;
  i = 0;
  r = 0;
  while (true) {
    int const x_35 = r;
    int const x_37 = x_7.two;
    if ((x_35 < (x_37 * 4))) {
    } else {
      break;
    }
    int const x_41 = r;
    int const x_43 = x_7.two;
    int const x_46 = i;
    i = (x_46 + int4(1, 2, 3, 4)[(x_41 / x_43)]);
    {
      int const x_48 = r;
      r = (x_48 + 2);
    }
  }
  int const x_50 = i;
  if ((x_50 == 10)) {
    *(tint_symbol_4) = float4(1.0f, 0.0f, 0.0f, 1.0f);
  } else {
    *(tint_symbol_4) = float4(0.0f, 0.0f, 0.0f, 0.0f);
  }
  return;
}

fragment tint_symbol_1 tint_symbol(constant buf0& x_7 [[buffer(0)]]) {
  thread float4 tint_symbol_5 = 0.0f;
  main_1(x_7, &(tint_symbol_5));
  main_out const tint_symbol_2 = {.x_GLF_color_1=tint_symbol_5};
  tint_symbol_1 const tint_symbol_3 = {.x_GLF_color_1=tint_symbol_2.x_GLF_color_1};
  return tint_symbol_3;
}

