SKIP: FAILED

; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 120
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %tint_symbol_1
               OpExecutionMode %main OriginUpperLeft
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "one"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpName %main_1 "main_1"
               OpName %f "f"
               OpName %a "a"
               OpName %b "b"
               OpName %c "c"
               OpName %i "i"
               OpName %v "v"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %tint_symbol_2 "tint_symbol_2"
               OpName %tint_symbol "tint_symbol"
               OpName %main "main"
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpDecorate %tint_symbol_1 Location 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
       %buf0 = OpTypeStruct %float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
    %v4float = OpTypeVector %float 4
%_ptr_Private_v4float = OpTypePointer Private %v4float
          %8 = OpConstantNull %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %8
%_ptr_Output_v4float = OpTypePointer Output %v4float
%tint_symbol_1 = OpVariable %_ptr_Output_v4float Output %8
       %void = OpTypeVoid
         %11 = OpTypeFunction %void
%_ptr_Function_float = OpTypePointer Function %float
         %17 = OpConstantNull %float
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %21 = OpConstantNull %int
    %v3float = OpTypeVector %float 3
%_ptr_Function_v3float = OpTypePointer Function %v3float
         %28 = OpConstantNull %v3float
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
      %int_0 = OpConstant %int 0
      %int_3 = OpConstant %int 3
       %bool = OpTypeBool
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %66 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
         %81 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
    %float_2 = OpConstant %float 2
    %float_3 = OpConstant %float 3
     %uint_3 = OpConstant %uint 3
%_ptr_Private_float = OpTypePointer Private %float
   %main_out = OpTypeStruct %v4float
        %108 = OpTypeFunction %void %main_out
     %main_1 = OpFunction %void None %11
         %14 = OpLabel
          %f = OpVariable %_ptr_Function_float Function %17
          %a = OpVariable %_ptr_Function_int Function %21
          %b = OpVariable %_ptr_Function_int Function %21
          %c = OpVariable %_ptr_Function_int Function %21
          %i = OpVariable %_ptr_Function_int Function %21
          %v = OpVariable %_ptr_Function_v3float Function %28
         %32 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0
         %33 = OpLoad %float %32
               OpStore %f %33
               OpStore %a %int_1
               OpStore %b %int_0
               OpStore %c %int_1
               OpStore %i %int_0
               OpBranch %36
         %36 = OpLabel
               OpLoopMerge %37 %38 None
               OpBranch %39
         %39 = OpLabel
         %40 = OpLoad %int %i
         %42 = OpSLessThan %bool %40 %int_3
               OpSelectionMerge %44 None
               OpBranchConditional %42 %45 %46
         %45 = OpLabel
               OpBranch %44
         %46 = OpLabel
               OpBranch %37
         %44 = OpLabel
         %47 = OpLoad %int %i
         %48 = OpLoad %float %f
         %49 = OpLoad %int %i
         %50 = OpAccessChain %_ptr_Function_float %v %47
         %51 = OpConvertSToF %float %49
         %52 = OpFAdd %float %48 %51
               OpStore %50 %52
               OpBranch %38
         %38 = OpLabel
         %53 = OpLoad %int %i
         %54 = OpIAdd %int %53 %int_1
               OpStore %i %54
               OpBranch %36
         %37 = OpLabel
         %55 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0
         %56 = OpLoad %float %55
         %58 = OpFOrdEqual %bool %56 %float_1
               OpSelectionMerge %59 None
               OpBranchConditional %58 %60 %59
         %60 = OpLabel
               OpBranch %61
         %61 = OpLabel
               OpLoopMerge %62 %63 None
               OpBranch %64
         %64 = OpLabel
               OpStore %x_GLF_color %66
               OpBranch %63
         %63 = OpLabel
         %67 = OpLoad %int %c
         %68 = OpLoad %int %a
         %69 = OpLoad %int %b
         %70 = OpBitwiseOr %int %68 %69
         %71 = OpBitwiseAnd %int %67 %70
         %72 = OpIEqual %bool %71 %int_0
               OpSelectionMerge %73 None
               OpBranchConditional %72 %74 %75
         %74 = OpLabel
               OpBranch %73
         %75 = OpLabel
               OpBranch %62
         %73 = OpLabel
               OpBranch %61
         %62 = OpLabel
         %76 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0
         %77 = OpLoad %float %76
         %78 = OpFOrdEqual %bool %77 %float_1
               OpSelectionMerge %79 None
               OpBranchConditional %78 %80 %79
         %80 = OpLabel
               OpStore %x_GLF_color %81
               OpBranch %79
         %79 = OpLabel
               OpBranch %59
         %59 = OpLabel
         %82 = OpAccessChain %_ptr_Function_float %v %uint_0
         %83 = OpLoad %float %82
         %85 = OpAccessChain %_ptr_Function_float %v %uint_1
         %86 = OpLoad %float %85
         %88 = OpAccessChain %_ptr_Function_float %v %uint_2
         %89 = OpLoad %float %88
         %91 = OpFOrdEqual %bool %83 %float_1
         %90 = OpSelect %float %91 %float_1 %float_0
         %94 = OpFOrdEqual %bool %86 %float_2
         %92 = OpSelect %float %94 %float_0 %float_1
         %97 = OpFOrdEqual %bool %89 %float_3
         %95 = OpSelect %float %97 %float_0 %float_1
         %98 = OpCompositeConstruct %v3float %90 %92 %95
         %99 = OpLoad %v4float %x_GLF_color
        %100 = OpCompositeExtract %float %98 0
        %101 = OpCompositeExtract %float %98 1
        %102 = OpCompositeExtract %float %98 2
        %103 = OpCompositeExtract %float %99 3
        %104 = OpCompositeConstruct %v4float %100 %101 %102 %103
               OpStore %x_GLF_color %104
        %107 = OpAccessChain %_ptr_Private_float %x_GLF_color %uint_3
               OpStore %107 %float_1
               OpReturn
               OpFunctionEnd
%tint_symbol_2 = OpFunction %void None %108
%tint_symbol = OpFunctionParameter %main_out
        %112 = OpLabel
        %113 = OpCompositeExtract %v4float %tint_symbol 0
               OpStore %tint_symbol_1 %113
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %11
        %115 = OpLabel
        %116 = OpFunctionCall %void %main_1
        %118 = OpLoad %v4float %x_GLF_color
        %119 = OpCompositeConstruct %main_out %118
        %117 = OpFunctionCall %void %tint_symbol_2 %119
               OpReturn
               OpFunctionEnd
1:1: The continue construct with the continue target 63[%63] is not post dominated by the back-edge block 73[%73]
  %73 = OpLabel

