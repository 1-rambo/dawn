; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 52
; Schema: 0
               OpCapability Shader
         %29 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %tint_symbol_1
               OpExecutionMode %main OriginUpperLeft
               OpName %x_GLF_color "x_GLF_color"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpName %main_1 "main_1"
               OpName %a "a"
               OpName %b "b"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %tint_symbol_2 "tint_symbol_2"
               OpName %tint_symbol "tint_symbol"
               OpName %main "main"
               OpDecorate %tint_symbol_1 Location 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Private_v4float = OpTypePointer Private %v4float
          %5 = OpConstantNull %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
%_ptr_Output_v4float = OpTypePointer Output %v4float
%tint_symbol_1 = OpVariable %_ptr_Output_v4float Output %5
       %void = OpTypeVoid
          %8 = OpTypeFunction %void
    %v2float = OpTypeVector %float 2
%_ptr_Function_v2float = OpTypePointer Function %v2float
         %15 = OpConstantNull %v2float
    %float_1 = OpConstant %float 1
         %18 = OpConstantComposite %v2float %float_1 %float_1
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Function_float = OpTypePointer Function %float
  %float_0_5 = OpConstant %float 0.5
       %bool = OpTypeBool
    %float_0 = OpConstant %float 0
         %38 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
         %39 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
   %main_out = OpTypeStruct %v4float
         %40 = OpTypeFunction %void %main_out
     %main_1 = OpFunction %void None %8
         %11 = OpLabel
          %a = OpVariable %_ptr_Function_v2float Function %15
          %b = OpVariable %_ptr_Function_v2float Function %15
               OpStore %a %18
         %22 = OpAccessChain %_ptr_Function_float %a %uint_0
         %23 = OpLoad %float %22
         %24 = OpAccessChain %_ptr_Function_float %a %uint_0
         %26 = OpFAdd %float %23 %float_0_5
               OpStore %24 %26
         %27 = OpLoad %v2float %a
         %28 = OpExtInst %v2float %29 Fract %27
               OpStore %b %28
         %30 = OpAccessChain %_ptr_Function_float %b %uint_0
         %31 = OpLoad %float %30
         %32 = OpFOrdEqual %bool %31 %float_0_5
               OpSelectionMerge %34 None
               OpBranchConditional %32 %35 %36
         %35 = OpLabel
               OpStore %x_GLF_color %38
               OpBranch %34
         %36 = OpLabel
               OpStore %x_GLF_color %39
               OpBranch %34
         %34 = OpLabel
               OpReturn
               OpFunctionEnd
%tint_symbol_2 = OpFunction %void None %40
%tint_symbol = OpFunctionParameter %main_out
         %44 = OpLabel
         %45 = OpCompositeExtract %v4float %tint_symbol 0
               OpStore %tint_symbol_1 %45
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %8
         %47 = OpLabel
         %48 = OpFunctionCall %void %main_1
         %50 = OpLoad %v4float %x_GLF_color
         %51 = OpCompositeConstruct %main_out %50
         %49 = OpFunctionCall %void %tint_symbol_2 %51
               OpReturn
               OpFunctionEnd
