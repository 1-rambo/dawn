; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 81
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %tint_symbol %tint_symbol_2
               OpExecutionMode %main OriginUpperLeft
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %x_GLF_color "x_GLF_color"
               OpName %tint_symbol "tint_symbol"
               OpName %tint_symbol_2 "tint_symbol_2"
               OpName %x_47 "x_47"
               OpName %main_1 "main_1"
               OpName %x_30_phi "x_30_phi"
               OpName %x_48_phi "x_48_phi"
               OpName %x_31 "x_31"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpName %main "main"
               OpDecorate %tint_symbol BuiltIn FragCoord
               OpDecorate %tint_symbol_2 Location 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_ptr_Private_v4float = OpTypePointer Private %v4float
          %5 = OpConstantNull %v4float
%gl_FragCoord = OpVariable %_ptr_Private_v4float Private %5
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %5
%_ptr_Input_v4float = OpTypePointer Input %v4float
%tint_symbol = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
%tint_symbol_2 = OpVariable %_ptr_Output_v4float Output %5
       %void = OpTypeVoid
         %11 = OpTypeFunction %void
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %24 = OpConstantNull %int
       %bool = OpTypeBool
%_ptr_Function_bool = OpTypePointer Function %bool
         %28 = OpConstantNull %bool
      %int_0 = OpConstant %int 0
      %false = OpConstantFalse %bool
     %int_10 = OpConstant %int 10
       %uint = OpTypeInt 32 0
     %uint_1 = OpConstant %uint 1
%_ptr_Private_float = OpTypePointer Private %float
    %float_0 = OpConstant %float 0
     %uint_0 = OpConstant %uint 0
       %true = OpConstantTrue %bool
      %int_1 = OpConstant %int 1
    %float_1 = OpConstant %float 1
         %67 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
   %main_out = OpTypeStruct %v4float
         %68 = OpTypeFunction %void %main_out
       %x_47 = OpFunction %void None %11
         %14 = OpLabel
               OpKill
               OpFunctionEnd
     %main_1 = OpFunction %void None %11
         %16 = OpLabel
   %x_30_phi = OpVariable %_ptr_Function_int Function %24
   %x_48_phi = OpVariable %_ptr_Function_bool Function %28
       %x_31 = OpVariable %_ptr_Function_int Function %24
               OpBranch %17
         %17 = OpLabel
               OpLoopMerge %18 %19 None
               OpBranch %20
         %20 = OpLabel
               OpStore %x_30_phi %int_0
               OpBranch %30
         %30 = OpLabel
               OpLoopMerge %31 %32 None
               OpBranch %33
         %33 = OpLabel
         %35 = OpLoad %int %x_30_phi
               OpStore %x_48_phi %false
         %38 = OpSLessThan %bool %35 %int_10
               OpSelectionMerge %39 None
               OpBranchConditional %38 %40 %41
         %40 = OpLabel
               OpBranch %39
         %41 = OpLabel
               OpBranch %31
         %39 = OpLabel
         %45 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
         %46 = OpLoad %float %45
         %48 = OpFOrdLessThan %bool %46 %float_0
               OpSelectionMerge %49 None
               OpBranchConditional %48 %50 %49
         %50 = OpLabel
         %52 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_0
         %53 = OpLoad %float %52
         %54 = OpFOrdLessThan %bool %53 %float_0
               OpSelectionMerge %55 None
               OpBranchConditional %54 %56 %57
         %56 = OpLabel
               OpStore %x_48_phi %false
               OpBranch %31
         %57 = OpLabel
               OpBranch %32
         %55 = OpLabel
               OpBranch %32
         %49 = OpLabel
         %58 = OpFunctionCall %void %x_47
               OpStore %x_48_phi %true
               OpBranch %31
         %32 = OpLabel
         %61 = OpIAdd %int %35 %int_1
               OpStore %x_31 %61
         %62 = OpLoad %int %x_31
               OpStore %x_30_phi %62
               OpBranch %30
         %31 = OpLabel
         %63 = OpLoad %bool %x_48_phi
               OpSelectionMerge %64 None
               OpBranchConditional %63 %65 %64
         %65 = OpLabel
               OpBranch %18
         %64 = OpLabel
               OpStore %x_GLF_color %67
               OpBranch %18
         %19 = OpLabel
               OpBranch %17
         %18 = OpLabel
               OpReturn
               OpFunctionEnd
%tint_symbol_3 = OpFunction %void None %68
%tint_symbol_1 = OpFunctionParameter %main_out
         %72 = OpLabel
         %73 = OpCompositeExtract %v4float %tint_symbol_1 0
               OpStore %tint_symbol_2 %73
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %11
         %75 = OpLabel
         %76 = OpLoad %v4float %tint_symbol
               OpStore %gl_FragCoord %76
         %77 = OpFunctionCall %void %main_1
         %79 = OpLoad %v4float %x_GLF_color
         %80 = OpCompositeConstruct %main_out %79
         %78 = OpFunctionCall %void %tint_symbol_3 %80
               OpReturn
               OpFunctionEnd
