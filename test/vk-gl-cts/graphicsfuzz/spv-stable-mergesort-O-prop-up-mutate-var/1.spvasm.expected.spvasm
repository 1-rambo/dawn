SKIP: FAILED

; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 424
; Schema: 0
               OpCapability Shader
        %169 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %tint_symbol %tint_symbol_2
               OpExecutionMode %main OriginUpperLeft
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_8 "x_8"
               OpName %gl_FragCoord "gl_FragCoord"
               OpName %x_GLF_color "x_GLF_color"
               OpName %tint_symbol "tint_symbol"
               OpName %tint_symbol_2 "tint_symbol_2"
               OpName %main_1 "main_1"
               OpName %temp "temp"
               OpName %data "data"
               OpName %x_190 "x_190"
               OpName %x_262 "x_262"
               OpName %x_63_phi "x_63_phi"
               OpName %x_103_phi "x_103_phi"
               OpName %x_112_phi "x_112_phi"
               OpName %x_263_phi "x_263_phi"
               OpName %x_100 "x_100"
               OpName %x_98 "x_98"
               OpName %x_96 "x_96"
               OpName %x_94 "x_94"
               OpName %x_92 "x_92"
               OpName %x_90 "x_90"
               OpName %x_88 "x_88"
               OpName %x_86 "x_86"
               OpName %x_84 "x_84"
               OpName %x_82 "x_82"
               OpName %x_64_phi "x_64_phi"
               OpName %x_104 "x_104"
               OpName %x_113 "x_113"
               OpName %x_119_phi "x_119_phi"
               OpName %x_131 "x_131"
               OpName %x_136 "x_136"
               OpName %x_131_phi "x_131_phi"
               OpName %x_134_phi "x_134_phi"
               OpName %x_136_phi "x_136_phi"
               OpName %x_158_phi "x_158_phi"
               OpName %x_161_phi "x_161_phi"
               OpName %x_171_phi "x_171_phi"
               OpName %x_151 "x_151"
               OpName %x_154 "x_154"
               OpName %x_135_phi "x_135_phi"
               OpName %x_137_phi "x_137_phi"
               OpName %x_159 "x_159"
               OpName %x_162 "x_162"
               OpName %x_172 "x_172"
               OpName %x_181 "x_181"
               OpName %x_199 "x_199"
               OpName %x_261 "x_261"
               OpName %x_262_phi "x_262_phi"
               OpName %x_208 "x_208"
               OpName %x_260 "x_260"
               OpName %x_261_phi "x_261_phi"
               OpName %x_217 "x_217"
               OpName %x_259 "x_259"
               OpName %x_260_phi "x_260_phi"
               OpName %x_230 "x_230"
               OpName %x_258 "x_258"
               OpName %x_259_phi "x_259_phi"
               OpName %x_239 "x_239"
               OpName %x_257 "x_257"
               OpName %x_258_phi "x_258_phi"
               OpName %x_248 "x_248"
               OpName %x_256 "x_256"
               OpName %x_257_phi "x_257_phi"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %tint_symbol_3 "tint_symbol_3"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpName %main "main"
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_8 NonWritable
               OpDecorate %x_8 DescriptorSet 0
               OpDecorate %x_8 Binding 0
               OpDecorate %tint_symbol BuiltIn FragCoord
               OpDecorate %tint_symbol_2 Location 0
               OpDecorate %_arr_int_uint_10 ArrayStride 4
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_8 = OpVariable %_ptr_Uniform_buf0 Uniform
    %v4float = OpTypeVector %float 4
%_ptr_Private_v4float = OpTypePointer Private %v4float
          %9 = OpConstantNull %v4float
%gl_FragCoord = OpVariable %_ptr_Private_v4float Private %9
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %9
%_ptr_Input_v4float = OpTypePointer Input %v4float
%tint_symbol = OpVariable %_ptr_Input_v4float Input
%_ptr_Output_v4float = OpTypePointer Output %v4float
%tint_symbol_2 = OpVariable %_ptr_Output_v4float Output %9
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
        %int = OpTypeInt 32 1
       %uint = OpTypeInt 32 0
    %uint_10 = OpConstant %uint 10
%_arr_int_uint_10 = OpTypeArray %int %uint_10
%_ptr_Function__arr_int_uint_10 = OpTypePointer Function %_arr_int_uint_10
         %25 = OpConstantNull %_arr_int_uint_10
%_ptr_Function_float = OpTypePointer Function %float
         %29 = OpConstantNull %float
%_ptr_Function_int = OpTypePointer Function %int
         %33 = OpConstantNull %int
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_0 = OpConstant %int 0
         %60 = OpConstantComposite %_arr_int_uint_10 %int_0 %int_0 %int_0 %int_0 %int_0 %int_0 %int_0 %int_0 %int_0 %int_0
      %int_1 = OpConstant %int 1
     %int_n5 = OpConstant %int -5
     %int_n4 = OpConstant %int -4
     %int_n3 = OpConstant %int -3
     %int_n2 = OpConstant %int -2
     %int_n1 = OpConstant %int -1
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
      %int_4 = OpConstant %int 4
     %int_10 = OpConstant %int 10
       %bool = OpTypeBool
      %int_9 = OpConstant %int 9
     %uint_1 = OpConstant %uint 1
%_ptr_Private_float = OpTypePointer Private %float
     %int_30 = OpConstant %int 30
  %float_0_5 = OpConstant %float 0.5
%float_0_100000001 = OpConstant %float 0.100000001
     %int_60 = OpConstant %int 60
     %int_90 = OpConstant %int 90
    %int_120 = OpConstant %int 120
    %int_150 = OpConstant %int 150
    %int_180 = OpConstant %int 180
      %int_5 = OpConstant %int 5
    %int_210 = OpConstant %int 210
      %int_6 = OpConstant %int 6
    %int_240 = OpConstant %int 240
      %int_7 = OpConstant %int 7
    %int_270 = OpConstant %int 270
      %int_8 = OpConstant %int 8
    %float_1 = OpConstant %float 1
   %main_out = OpTypeStruct %v4float
        %411 = OpTypeFunction %void %main_out
     %main_1 = OpFunction %void None %15
         %18 = OpLabel
       %temp = OpVariable %_ptr_Function__arr_int_uint_10 Function %25
       %data = OpVariable %_ptr_Function__arr_int_uint_10 Function %25
      %x_190 = OpVariable %_ptr_Function_float Function %29
      %x_262 = OpVariable %_ptr_Function_float Function %29
   %x_63_phi = OpVariable %_ptr_Function_int Function %33
  %x_103_phi = OpVariable %_ptr_Function_int Function %33
  %x_112_phi = OpVariable %_ptr_Function_int Function %33
  %x_263_phi = OpVariable %_ptr_Function_float Function %29
      %x_100 = OpVariable %_ptr_Function_int Function %33
       %x_98 = OpVariable %_ptr_Function_int Function %33
       %x_96 = OpVariable %_ptr_Function_int Function %33
       %x_94 = OpVariable %_ptr_Function_int Function %33
       %x_92 = OpVariable %_ptr_Function_int Function %33
       %x_90 = OpVariable %_ptr_Function_int Function %33
       %x_88 = OpVariable %_ptr_Function_int Function %33
       %x_86 = OpVariable %_ptr_Function_int Function %33
       %x_84 = OpVariable %_ptr_Function_int Function %33
       %x_82 = OpVariable %_ptr_Function_int Function %33
   %x_64_phi = OpVariable %_ptr_Function_int Function %33
      %x_104 = OpVariable %_ptr_Function_int Function %33
      %x_113 = OpVariable %_ptr_Function_int Function %33
  %x_119_phi = OpVariable %_ptr_Function_int Function %33
      %x_131 = OpVariable %_ptr_Function_int Function %33
      %x_136 = OpVariable %_ptr_Function_int Function %33
  %x_131_phi = OpVariable %_ptr_Function_int Function %33
  %x_134_phi = OpVariable %_ptr_Function_int Function %33
  %x_136_phi = OpVariable %_ptr_Function_int Function %33
  %x_158_phi = OpVariable %_ptr_Function_int Function %33
  %x_161_phi = OpVariable %_ptr_Function_int Function %33
  %x_171_phi = OpVariable %_ptr_Function_int Function %33
      %x_151 = OpVariable %_ptr_Function_int Function %33
      %x_154 = OpVariable %_ptr_Function_int Function %33
  %x_135_phi = OpVariable %_ptr_Function_int Function %33
  %x_137_phi = OpVariable %_ptr_Function_int Function %33
      %x_159 = OpVariable %_ptr_Function_int Function %33
      %x_162 = OpVariable %_ptr_Function_int Function %33
      %x_172 = OpVariable %_ptr_Function_int Function %33
      %x_181 = OpVariable %_ptr_Function_int Function %33
      %x_199 = OpVariable %_ptr_Function_float Function %29
      %x_261 = OpVariable %_ptr_Function_float Function %29
  %x_262_phi = OpVariable %_ptr_Function_float Function %29
      %x_208 = OpVariable %_ptr_Function_float Function %29
      %x_260 = OpVariable %_ptr_Function_float Function %29
  %x_261_phi = OpVariable %_ptr_Function_float Function %29
      %x_217 = OpVariable %_ptr_Function_float Function %29
      %x_259 = OpVariable %_ptr_Function_float Function %29
  %x_260_phi = OpVariable %_ptr_Function_float Function %29
      %x_230 = OpVariable %_ptr_Function_float Function %29
      %x_258 = OpVariable %_ptr_Function_float Function %29
  %x_259_phi = OpVariable %_ptr_Function_float Function %29
      %x_239 = OpVariable %_ptr_Function_float Function %29
      %x_257 = OpVariable %_ptr_Function_float Function %29
  %x_258_phi = OpVariable %_ptr_Function_float Function %29
      %x_248 = OpVariable %_ptr_Function_float Function %29
      %x_256 = OpVariable %_ptr_Function_float Function %29
  %x_257_phi = OpVariable %_ptr_Function_float Function %29
         %39 = OpAccessChain %_ptr_Uniform_float %x_8 %uint_0 %uint_0
         %40 = OpLoad %float %39
         %41 = OpConvertFToS %int %40
               OpStore %x_63_phi %41
               OpBranch %42
         %42 = OpLabel
               OpLoopMerge %43 %44 None
               OpBranch %45
         %45 = OpLabel
         %57 = OpLoad %int %x_63_phi
         %58 = OpLoad %_arr_int_uint_10 %data
               OpStore %data %60
               OpStore %data %58
         %62 = OpIAdd %int %57 %int_1
               OpStore %x_64_phi %62
               OpSelectionMerge %63 None
               OpSwitch %57 %64 9 %65 8 %66 7 %67 6 %68 5 %69 4 %70 3 %71 2 %72 1 %73 0 %74
         %65 = OpLabel
         %75 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %75 %int_n5
         %77 = OpIAdd %int %57 %int_1
               OpStore %x_100 %77
         %78 = OpLoad %int %x_100
               OpStore %x_64_phi %78
               OpBranch %63
         %66 = OpLabel
         %79 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %79 %int_n4
         %81 = OpIAdd %int %57 %int_1
               OpStore %x_98 %81
         %82 = OpLoad %int %x_98
               OpStore %x_64_phi %82
               OpBranch %63
         %67 = OpLabel
         %83 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %83 %int_n3
         %85 = OpIAdd %int %57 %int_1
               OpStore %x_96 %85
         %86 = OpLoad %int %x_96
               OpStore %x_64_phi %86
               OpBranch %63
         %68 = OpLabel
         %87 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %87 %int_n2
         %89 = OpIAdd %int %57 %int_1
               OpStore %x_94 %89
         %90 = OpLoad %int %x_94
               OpStore %x_64_phi %90
               OpBranch %63
         %69 = OpLabel
         %91 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %91 %int_n1
         %93 = OpIAdd %int %57 %int_1
               OpStore %x_92 %93
         %94 = OpLoad %int %x_92
               OpStore %x_64_phi %94
               OpBranch %63
         %70 = OpLabel
         %95 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %95 %int_0
         %96 = OpIAdd %int %57 %int_1
               OpStore %x_90 %96
         %97 = OpLoad %int %x_90
               OpStore %x_64_phi %97
               OpBranch %63
         %71 = OpLabel
         %98 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %98 %int_1
         %99 = OpIAdd %int %57 %int_1
               OpStore %x_88 %99
        %100 = OpLoad %int %x_88
               OpStore %x_64_phi %100
               OpBranch %63
         %72 = OpLabel
        %101 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %101 %int_2
        %103 = OpIAdd %int %57 %int_1
               OpStore %x_86 %103
        %104 = OpLoad %int %x_86
               OpStore %x_64_phi %104
               OpBranch %63
         %73 = OpLabel
        %105 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %105 %int_3
        %107 = OpIAdd %int %57 %int_1
               OpStore %x_84 %107
        %108 = OpLoad %int %x_84
               OpStore %x_64_phi %108
               OpBranch %63
         %74 = OpLabel
        %109 = OpAccessChain %_ptr_Function_int %data %57
               OpStore %109 %int_4
        %111 = OpIAdd %int %57 %int_1
               OpStore %x_82 %111
        %112 = OpLoad %int %x_82
               OpStore %x_64_phi %112
               OpBranch %63
         %64 = OpLabel
               OpBranch %63
         %63 = OpLabel
        %113 = OpLoad %int %x_64_phi
               OpBranch %44
         %44 = OpLabel
               OpStore %x_63_phi %113
        %115 = OpSLessThan %bool %113 %int_10
               OpSelectionMerge %117 None
               OpBranchConditional %115 %118 %119
        %118 = OpLabel
               OpBranch %117
        %119 = OpLabel
               OpBranch %43
        %117 = OpLabel
               OpBranch %42
         %43 = OpLabel
               OpStore %x_103_phi %int_0
               OpBranch %120
        %120 = OpLabel
               OpLoopMerge %121 %122 None
               OpBranch %123
        %123 = OpLabel
        %125 = OpLoad %int %x_103_phi
        %126 = OpSLessThan %bool %125 %int_10
               OpSelectionMerge %127 None
               OpBranchConditional %126 %128 %129
        %128 = OpLabel
               OpBranch %127
        %129 = OpLabel
               OpBranch %121
        %127 = OpLabel
               OpBranch %122
        %122 = OpLabel
        %130 = OpAccessChain %_ptr_Function_int %data %125
        %131 = OpLoad %int %130
        %132 = OpAccessChain %_ptr_Function_int %temp %125
               OpStore %132 %131
        %133 = OpIAdd %int %125 %int_1
               OpStore %x_104 %133
        %134 = OpLoad %int %x_104
               OpStore %x_103_phi %134
               OpBranch %120
        %121 = OpLabel
               OpStore %x_112_phi %int_1
               OpBranch %135
        %135 = OpLabel
               OpLoopMerge %136 %137 None
               OpBranch %138
        %138 = OpLabel
        %141 = OpLoad %int %x_112_phi
        %143 = OpSLessThanEqual %bool %141 %int_9
               OpSelectionMerge %144 None
               OpBranchConditional %143 %145 %146
        %145 = OpLabel
               OpBranch %144
        %146 = OpLabel
               OpBranch %136
        %144 = OpLabel
               OpStore %x_119_phi %int_0
               OpBranch %147
        %147 = OpLabel
               OpLoopMerge %148 %149 None
               OpBranch %150
        %150 = OpLabel
        %159 = OpLoad %int %x_119_phi
        %160 = OpSLessThan %bool %159 %int_9
               OpSelectionMerge %161 None
               OpBranchConditional %160 %162 %163
        %162 = OpLabel
               OpBranch %161
        %163 = OpLabel
               OpBranch %148
        %161 = OpLabel
        %164 = OpIAdd %int %159 %141
        %165 = OpISub %int %164 %int_1
        %166 = OpIMul %int %int_2 %141
        %167 = OpIAdd %int %159 %166
        %170 = OpISub %int %167 %int_1
        %168 = OpExtInst %int %169 SMin %170 %int_9
               OpStore %x_131_phi %159
               OpStore %x_134_phi %164
               OpStore %x_136_phi %159
               OpBranch %171
        %171 = OpLabel
               OpLoopMerge %172 %173 None
               OpBranch %174
        %174 = OpLabel
        %179 = OpLoad %int %x_131_phi
               OpStore %x_131 %179
        %180 = OpLoad %int %x_134_phi
        %181 = OpLoad %int %x_136_phi
               OpStore %x_136 %181
        %182 = OpLoad %int %x_136
        %183 = OpSLessThanEqual %bool %182 %165
               OpSelectionMerge %184 None
               OpBranchConditional %183 %185 %184
        %185 = OpLabel
        %186 = OpSLessThanEqual %bool %180 %168
               OpBranch %184
        %184 = OpLabel
        %187 = OpPhi %bool %183 %174 %186 %185
               OpSelectionMerge %188 None
               OpBranchConditional %187 %189 %190
        %189 = OpLabel
               OpBranch %188
        %190 = OpLabel
               OpBranch %172
        %188 = OpLabel
        %191 = OpLoad %int %x_136
        %192 = OpAccessChain %_ptr_Function_int %data %191
        %193 = OpLoad %int %192
        %194 = OpAccessChain %_ptr_Function_int %data %180
        %195 = OpLoad %int %194
        %197 = OpLoad %int %x_131
        %198 = OpCopyObject %int %int_1
        %199 = OpIAdd %int %197 %198
        %196 = OpCopyObject %int %199
        %200 = OpSLessThan %bool %193 %195
               OpSelectionMerge %201 None
               OpBranchConditional %200 %202 %203
        %202 = OpLabel
        %205 = OpLoad %int %x_136
        %206 = OpCopyObject %int %int_1
        %207 = OpIAdd %int %205 %206
        %204 = OpCopyObject %int %207
               OpStore %x_151 %204
        %208 = OpAccessChain %_ptr_Function_int %data %191
        %209 = OpLoad %int %208
        %210 = OpLoad %int %x_131
        %211 = OpAccessChain %_ptr_Function_int %temp %210
               OpStore %211 %209
               OpStore %x_135_phi %180
        %212 = OpLoad %int %x_151
               OpStore %x_137_phi %212
               OpBranch %201
        %203 = OpLabel
        %213 = OpIAdd %int %180 %int_1
               OpStore %x_154 %213
        %214 = OpAccessChain %_ptr_Function_int %data %180
        %215 = OpLoad %int %214
        %216 = OpLoad %int %x_131
        %217 = OpAccessChain %_ptr_Function_int %temp %216
               OpStore %217 %215
        %218 = OpLoad %int %x_154
               OpStore %x_135_phi %218
        %219 = OpLoad %int %x_136
               OpStore %x_137_phi %219
               OpBranch %201
        %201 = OpLabel
        %220 = OpLoad %int %x_135_phi
        %221 = OpLoad %int %x_137_phi
               OpBranch %173
        %173 = OpLabel
               OpStore %x_131_phi %196
               OpStore %x_134_phi %220
               OpStore %x_136_phi %221
               OpBranch %171
        %172 = OpLabel
        %222 = OpLoad %int %x_131
               OpStore %x_158_phi %222
        %223 = OpLoad %int %x_136
               OpStore %x_161_phi %223
               OpBranch %224
        %224 = OpLabel
               OpLoopMerge %225 %226 None
               OpBranch %227
        %227 = OpLabel
        %230 = OpLoad %int %x_158_phi
        %231 = OpLoad %int %x_161_phi
        %232 = OpSLessThan %bool %231 %int_10
               OpSelectionMerge %233 None
               OpBranchConditional %232 %234 %233
        %234 = OpLabel
        %235 = OpSLessThanEqual %bool %231 %165
               OpBranch %233
        %233 = OpLabel
        %236 = OpPhi %bool %232 %227 %235 %234
               OpSelectionMerge %237 None
               OpBranchConditional %236 %238 %239
        %238 = OpLabel
               OpBranch %237
        %239 = OpLabel
               OpBranch %225
        %237 = OpLabel
               OpBranch %226
        %226 = OpLabel
        %240 = OpIAdd %int %230 %int_1
               OpStore %x_159 %240
        %241 = OpIAdd %int %231 %int_1
               OpStore %x_162 %241
        %242 = OpAccessChain %_ptr_Function_int %data %231
        %243 = OpLoad %int %242
        %244 = OpAccessChain %_ptr_Function_int %temp %230
               OpStore %244 %243
        %245 = OpLoad %int %x_159
               OpStore %x_158_phi %245
        %246 = OpLoad %int %x_162
               OpStore %x_161_phi %246
               OpBranch %224
        %225 = OpLabel
               OpStore %x_171_phi %159
               OpBranch %247
        %247 = OpLabel
               OpLoopMerge %248 %249 None
               OpBranch %250
        %250 = OpLabel
        %252 = OpLoad %int %x_171_phi
        %253 = OpSLessThanEqual %bool %252 %168
               OpSelectionMerge %254 None
               OpBranchConditional %253 %255 %256
        %255 = OpLabel
               OpBranch %254
        %256 = OpLabel
               OpBranch %248
        %254 = OpLabel
               OpBranch %249
        %249 = OpLabel
        %257 = OpAccessChain %_ptr_Function_int %temp %252
        %258 = OpLoad %int %257
        %259 = OpAccessChain %_ptr_Function_int %data %252
               OpStore %259 %258
        %260 = OpIAdd %int %252 %int_1
               OpStore %x_172 %260
        %261 = OpLoad %int %x_172
               OpStore %x_171_phi %261
               OpBranch %247
        %248 = OpLabel
               OpBranch %149
        %149 = OpLabel
               OpStore %x_119_phi %167
               OpBranch %147
        %148 = OpLabel
               OpBranch %137
        %137 = OpLabel
        %262 = OpIMul %int %int_2 %141
               OpStore %x_113 %262
        %263 = OpLoad %int %x_113
               OpStore %x_112_phi %263
               OpBranch %135
        %136 = OpLabel
        %270 = OpAccessChain %_ptr_Private_float %gl_FragCoord %uint_1
        %271 = OpLoad %float %270
        %272 = OpConvertFToS %int %271
               OpStore %x_181 %272
        %273 = OpLoad %int %x_181
        %275 = OpSLessThan %bool %273 %int_30
               OpSelectionMerge %276 None
               OpBranchConditional %275 %277 %278
        %277 = OpLabel
        %279 = OpAccessChain %_ptr_Function_int %data %int_0
        %280 = OpLoad %int %279
        %282 = OpConvertSToF %float %280
        %284 = OpFMul %float %282 %float_0_100000001
        %285 = OpFAdd %float %float_0_5 %284
               OpStore %x_190 %285
        %286 = OpLoad %float %x_190
               OpStore %x_263_phi %286
               OpBranch %276
        %278 = OpLabel
        %290 = OpLoad %int %x_181
        %292 = OpSLessThan %bool %290 %int_60
               OpSelectionMerge %293 None
               OpBranchConditional %292 %294 %295
        %294 = OpLabel
        %296 = OpAccessChain %_ptr_Function_int %data %int_1
        %297 = OpLoad %int %296
        %298 = OpConvertSToF %float %297
        %299 = OpFMul %float %298 %float_0_100000001
        %300 = OpFAdd %float %float_0_5 %299
               OpStore %x_199 %300
        %301 = OpLoad %float %x_199
               OpStore %x_262_phi %301
               OpBranch %293
        %295 = OpLabel
        %305 = OpLoad %int %x_181
        %307 = OpSLessThan %bool %305 %int_90
               OpSelectionMerge %308 None
               OpBranchConditional %307 %309 %310
        %309 = OpLabel
        %311 = OpAccessChain %_ptr_Function_int %data %int_2
        %312 = OpLoad %int %311
        %313 = OpConvertSToF %float %312
        %314 = OpFMul %float %313 %float_0_100000001
        %315 = OpFAdd %float %float_0_5 %314
               OpStore %x_208 %315
        %316 = OpLoad %float %x_208
               OpStore %x_261_phi %316
               OpBranch %308
        %310 = OpLabel
        %317 = OpLoad %int %x_181
        %319 = OpSLessThan %bool %317 %int_120
               OpSelectionMerge %320 None
               OpBranchConditional %319 %321 %322
        %321 = OpLabel
        %323 = OpAccessChain %_ptr_Function_int %data %int_3
        %324 = OpLoad %int %323
        %325 = OpConvertSToF %float %324
        %326 = OpFMul %float %325 %float_0_100000001
        %327 = OpFAdd %float %float_0_5 %326
               OpStore %x_217 %327
        %328 = OpLoad %float %x_217
               OpStore %x_260_phi %328
               OpBranch %320
        %322 = OpLabel
        %332 = OpLoad %int %x_181
        %334 = OpSLessThan %bool %332 %int_150
               OpSelectionMerge %335 None
               OpBranchConditional %334 %336 %337
        %336 = OpLabel
               OpKill
        %337 = OpLabel
        %341 = OpLoad %int %x_181
        %343 = OpSLessThan %bool %341 %int_180
               OpSelectionMerge %344 None
               OpBranchConditional %343 %345 %346
        %345 = OpLabel
        %348 = OpAccessChain %_ptr_Function_int %data %int_5
        %349 = OpLoad %int %348
        %350 = OpConvertSToF %float %349
        %351 = OpFMul %float %350 %float_0_100000001
        %352 = OpFAdd %float %float_0_5 %351
               OpStore %x_230 %352
        %353 = OpLoad %float %x_230
               OpStore %x_259_phi %353
               OpBranch %344
        %346 = OpLabel
        %357 = OpLoad %int %x_181
        %359 = OpSLessThan %bool %357 %int_210
               OpSelectionMerge %360 None
               OpBranchConditional %359 %361 %362
        %361 = OpLabel
        %364 = OpAccessChain %_ptr_Function_int %data %int_6
        %365 = OpLoad %int %364
        %366 = OpConvertSToF %float %365
        %367 = OpFMul %float %366 %float_0_100000001
        %368 = OpFAdd %float %float_0_5 %367
               OpStore %x_239 %368
        %369 = OpLoad %float %x_239
               OpStore %x_258_phi %369
               OpBranch %360
        %362 = OpLabel
        %370 = OpLoad %int %x_181
        %372 = OpSLessThan %bool %370 %int_240
               OpSelectionMerge %373 None
               OpBranchConditional %372 %374 %375
        %374 = OpLabel
        %377 = OpAccessChain %_ptr_Function_int %data %int_7
        %378 = OpLoad %int %377
        %379 = OpConvertSToF %float %378
        %380 = OpFMul %float %379 %float_0_100000001
        %381 = OpFAdd %float %float_0_5 %380
               OpStore %x_248 %381
        %382 = OpLoad %float %x_248
               OpStore %x_257_phi %382
               OpBranch %373
        %375 = OpLabel
        %383 = OpLoad %int %x_181
        %385 = OpSLessThan %bool %383 %int_270
               OpSelectionMerge %386 None
               OpBranchConditional %385 %387 %388
        %387 = OpLabel
               OpBranch %386
        %388 = OpLabel
               OpKill
        %386 = OpLabel
        %390 = OpAccessChain %_ptr_Function_int %data %int_8
        %391 = OpLoad %int %390
        %392 = OpConvertSToF %float %391
        %393 = OpFMul %float %392 %float_0_100000001
        %394 = OpFAdd %float %float_0_5 %393
               OpStore %x_256 %394
        %395 = OpLoad %float %x_256
               OpStore %x_257_phi %395
               OpBranch %373
        %373 = OpLabel
        %396 = OpLoad %float %x_257_phi
               OpStore %x_257 %396
        %397 = OpLoad %float %x_257
               OpStore %x_258_phi %397
               OpBranch %360
        %360 = OpLabel
        %398 = OpLoad %float %x_258_phi
               OpStore %x_258 %398
        %399 = OpLoad %float %x_258
               OpStore %x_259_phi %399
               OpBranch %344
        %344 = OpLabel
        %400 = OpLoad %float %x_259_phi
               OpStore %x_259 %400
               OpBranch %335
        %335 = OpLabel
        %401 = OpLoad %float %x_259
               OpStore %x_260_phi %401
               OpBranch %320
        %320 = OpLabel
        %402 = OpLoad %float %x_260_phi
               OpStore %x_260 %402
        %403 = OpLoad %float %x_260
               OpStore %x_261_phi %403
               OpBranch %308
        %308 = OpLabel
        %404 = OpLoad %float %x_261_phi
               OpStore %x_261 %404
        %405 = OpLoad %float %x_261
               OpStore %x_262_phi %405
               OpBranch %293
        %293 = OpLabel
        %406 = OpLoad %float %x_262_phi
               OpStore %x_262 %406
        %407 = OpLoad %float %x_262
               OpStore %x_263_phi %407
               OpBranch %276
        %276 = OpLabel
        %408 = OpLoad %float %x_263_phi
        %410 = OpCompositeConstruct %v4float %408 %408 %408 %float_1
               OpStore %x_GLF_color %410
               OpReturn
               OpFunctionEnd
%tint_symbol_3 = OpFunction %void None %411
%tint_symbol_1 = OpFunctionParameter %main_out
        %415 = OpLabel
        %416 = OpCompositeExtract %v4float %tint_symbol_1 0
               OpStore %tint_symbol_2 %416
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %15
        %418 = OpLabel
        %419 = OpLoad %v4float %tint_symbol
               OpStore %gl_FragCoord %419
        %420 = OpFunctionCall %void %main_1
        %422 = OpLoad %v4float %x_GLF_color
        %423 = OpCompositeConstruct %main_out %422
        %421 = OpFunctionCall %void %tint_symbol_3 %423
               OpReturn
               OpFunctionEnd
1:1: The continue construct with the continue target 44[%44] is not post dominated by the back-edge block 117[%117]
  %117 = OpLabel

