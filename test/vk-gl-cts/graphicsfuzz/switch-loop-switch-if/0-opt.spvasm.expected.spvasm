SKIP: FAILED

; SPIR-V
; Version: 1.3
; Generator: Google Tint Compiler; 0
; Bound: 88
; Schema: 0
               OpCapability Shader
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %main "main" %tint_symbol_1
               OpExecutionMode %main OriginUpperLeft
               OpName %buf0 "buf0"
               OpMemberName %buf0 0 "injectionSwitch"
               OpName %x_6 "x_6"
               OpName %x_GLF_color "x_GLF_color"
               OpName %tint_symbol_1 "tint_symbol_1"
               OpName %main_1 "main_1"
               OpName %i "i"
               OpName %main_out "main_out"
               OpMemberName %main_out 0 "x_GLF_color_1"
               OpName %tint_symbol_2 "tint_symbol_2"
               OpName %tint_symbol "tint_symbol"
               OpName %main "main"
               OpDecorate %buf0 Block
               OpMemberDecorate %buf0 0 Offset 0
               OpDecorate %x_6 NonWritable
               OpDecorate %x_6 DescriptorSet 0
               OpDecorate %x_6 Binding 0
               OpDecorate %tint_symbol_1 Location 0
               OpMemberDecorate %main_out 0 Offset 0
      %float = OpTypeFloat 32
    %v2float = OpTypeVector %float 2
       %buf0 = OpTypeStruct %v2float
%_ptr_Uniform_buf0 = OpTypePointer Uniform %buf0
        %x_6 = OpVariable %_ptr_Uniform_buf0 Uniform
    %v4float = OpTypeVector %float 4
%_ptr_Private_v4float = OpTypePointer Private %v4float
          %9 = OpConstantNull %v4float
%x_GLF_color = OpVariable %_ptr_Private_v4float Private %9
%_ptr_Output_v4float = OpTypePointer Output %v4float
%tint_symbol_1 = OpVariable %_ptr_Output_v4float Output %9
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
        %int = OpTypeInt 32 1
%_ptr_Function_int = OpTypePointer Function %int
         %19 = OpConstantNull %int
       %uint = OpTypeInt 32 0
     %uint_0 = OpConstant %uint 0
%_ptr_Uniform_float = OpTypePointer Uniform %float
      %int_1 = OpConstant %int 1
      %int_5 = OpConstant %int 5
      %int_7 = OpConstant %int 7
    %int_200 = OpConstant %int 200
       %bool = OpTypeBool
    %int_100 = OpConstant %int 100
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
     %int_n2 = OpConstant %int -2
    %float_1 = OpConstant %float 1
    %float_0 = OpConstant %float 0
         %74 = OpConstantComposite %v4float %float_1 %float_0 %float_0 %float_1
         %75 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_1
   %main_out = OpTypeStruct %v4float
         %76 = OpTypeFunction %void %main_out
     %main_1 = OpFunction %void None %12
         %15 = OpLabel
          %i = OpVariable %_ptr_Function_int Function %19
         %23 = OpAccessChain %_ptr_Uniform_float %x_6 %uint_0 %uint_0
         %24 = OpLoad %float %23
         %25 = OpConvertFToS %int %24
               OpStore %i %25
         %26 = OpLoad %int %i
               OpSelectionMerge %27 None
               OpSwitch %26 %28 0 %29
         %29 = OpLabel
               OpBranch %30
         %30 = OpLabel
               OpLoopMerge %31 %32 None
               OpBranch %33
         %33 = OpLabel
         %34 = OpLoad %int %i
         %36 = OpIAdd %int %34 %int_1
               OpStore %i %36
         %37 = OpLoad %int %i
               OpSelectionMerge %38 None
               OpSwitch %37 %39 2 %40 1 %41
         %40 = OpLabel
         %42 = OpLoad %int %i
         %44 = OpIAdd %int %42 %int_5
               OpStore %i %44
               OpBranch %38
         %41 = OpLabel
               OpBranch %32
         %39 = OpLabel
         %45 = OpLoad %int %i
         %47 = OpIAdd %int %45 %int_7
               OpStore %i %47
               OpBranch %38
         %38 = OpLabel
               OpBranch %32
         %32 = OpLabel
         %48 = OpLoad %int %i
         %50 = OpSGreaterThan %bool %48 %int_200
               OpSelectionMerge %52 None
               OpBranchConditional %50 %53 %54
         %53 = OpLabel
               OpBranch %52
         %54 = OpLabel
               OpBranch %31
         %52 = OpLabel
               OpBranch %30
         %31 = OpLabel
         %55 = OpLoad %int %i
         %57 = OpSGreaterThan %bool %55 %int_100
               OpSelectionMerge %58 None
               OpBranchConditional %57 %59 %58
         %59 = OpLabel
         %60 = OpLoad %int %i
         %62 = OpISub %int %60 %int_2
               OpStore %i %62
               OpBranch %27
         %58 = OpLabel
               OpBranch %28
         %28 = OpLabel
         %63 = OpLoad %int %i
         %65 = OpISub %int %63 %int_3
               OpStore %i %65
               OpBranch %27
         %27 = OpLabel
         %66 = OpLoad %int %i
         %68 = OpIEqual %bool %66 %int_n2
               OpSelectionMerge %69 None
               OpBranchConditional %68 %70 %71
         %70 = OpLabel
               OpStore %x_GLF_color %74
               OpBranch %69
         %71 = OpLabel
               OpStore %x_GLF_color %75
               OpBranch %69
         %69 = OpLabel
               OpReturn
               OpFunctionEnd
%tint_symbol_2 = OpFunction %void None %76
%tint_symbol = OpFunctionParameter %main_out
         %80 = OpLabel
         %81 = OpCompositeExtract %v4float %tint_symbol 0
               OpStore %tint_symbol_1 %81
               OpReturn
               OpFunctionEnd
       %main = OpFunction %void None %12
         %83 = OpLabel
         %84 = OpFunctionCall %void %main_1
         %86 = OpLoad %v4float %x_GLF_color
         %87 = OpCompositeConstruct %main_out %86
         %85 = OpFunctionCall %void %tint_symbol_2 %87
               OpReturn
               OpFunctionEnd
1:1: The continue construct with the continue target 32[%32] is not post dominated by the back-edge block 52[%52]
  %52 = OpLabel

