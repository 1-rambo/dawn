#include <metal_stdlib>

using namespace metal;
struct buf0 {
  /* 0x0000 */ int three;
};
struct main_out {
  float4 x_GLF_color_1;
};
struct tint_symbol_2 {
  float4 x_GLF_color_1 [[color(0)]];
};

void main_1(constant buf0& x_6, thread float4* const tint_symbol_5, thread float4* const tint_symbol_6) {
  bool x_36 = false;
  bool x_37_phi = false;
  int const x_29 = x_6.three;
  bool const x_30 = (x_29 > 1);
  x_37_phi = x_30;
  if (x_30) {
    float const x_34 = (*(tint_symbol_5)).y;
    x_36 = !((x_34 < -5.0f));
    x_37_phi = x_36;
  }
  bool const x_37 = x_37_phi;
  if (x_37) {
    *(tint_symbol_6) = float4(1.0f, 0.0f, 0.0f, 1.0f);
  } else {
    *(tint_symbol_6) = float4(0.0f, 0.0f, 0.0f, 0.0f);
  }
  return;
}

fragment tint_symbol_2 tint_symbol(float4 gl_FragCoord_param [[position]], constant buf0& x_6 [[buffer(0)]]) {
  thread float4 tint_symbol_7 = 0.0f;
  thread float4 tint_symbol_8 = 0.0f;
  tint_symbol_7 = gl_FragCoord_param;
  main_1(x_6, &(tint_symbol_7), &(tint_symbol_8));
  main_out const tint_symbol_3 = {.x_GLF_color_1=tint_symbol_8};
  tint_symbol_2 const tint_symbol_4 = {.x_GLF_color_1=tint_symbol_3.x_GLF_color_1};
  return tint_symbol_4;
}

