//
// vert_main
//
#include <metal_stdlib>

using namespace metal;
struct Interface {
  int i;
  uint u;
  int4 vi;
  uint4 vu;
  float4 pos;
};

struct tint_symbol {
  int i [[user(locn0)]] [[flat]];
  uint u [[user(locn1)]] [[flat]];
  int4 vi [[user(locn2)]] [[flat]];
  uint4 vu [[user(locn3)]] [[flat]];
  float4 pos [[position]];
};

Interface vert_main_inner() {
  Interface const tint_symbol_1 = Interface{};
  return tint_symbol_1;
}

vertex tint_symbol vert_main() {
  Interface const inner_result = vert_main_inner();
  tint_symbol wrapper_result = {};
  wrapper_result.i = inner_result.i;
  wrapper_result.u = inner_result.u;
  wrapper_result.vi = inner_result.vi;
  wrapper_result.vu = inner_result.vu;
  wrapper_result.pos = inner_result.pos;
  return wrapper_result;
}

//
// frag_main
//
#include <metal_stdlib>

using namespace metal;
struct Interface {
  int i;
  uint u;
  int4 vi;
  uint4 vu;
  float4 pos;
};

struct tint_symbol_1 {
  int i [[user(locn0)]] [[flat]];
  uint u [[user(locn1)]] [[flat]];
  int4 vi [[user(locn2)]] [[flat]];
  uint4 vu [[user(locn3)]] [[flat]];
};

struct tint_symbol_2 {
  int value [[color(0)]];
};

int frag_main_inner(Interface inputs) {
  return inputs.i;
}

fragment tint_symbol_2 frag_main(float4 pos [[position]], tint_symbol_1 tint_symbol [[stage_in]]) {
  Interface const tint_symbol_3 = Interface{.i=tint_symbol.i, .u=tint_symbol.u, .vi=tint_symbol.vi, .vu=tint_symbol.vu, .pos=pos};
  int const inner_result = frag_main_inner(tint_symbol_3);
  tint_symbol_2 wrapper_result = {};
  wrapper_result.value = inner_result;
  return wrapper_result;
}

