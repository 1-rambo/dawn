//
// fragment_main
//
#include <metal_stdlib>

using namespace metal;
int tint_clamp(int e, int low, int high) {
  return min(max(e, low), high);
}

uint4 textureLoad_b60a86(texture1d<uint, access::read_write> tint_symbol) {
  uint4 res = tint_symbol.read(uint(tint_clamp(1, 0, int((tint_symbol.get_width(0) - 1u)))));
  return res;
}

fragment void fragment_main(device uint4* tint_symbol_1 [[buffer(0)]], texture1d<uint, access::read_write> tint_symbol_2 [[texture(0)]]) {
  *(tint_symbol_1) = textureLoad_b60a86(tint_symbol_2);
  return;
}

//
// compute_main
//
#include <metal_stdlib>

using namespace metal;
int tint_clamp(int e, int low, int high) {
  return min(max(e, low), high);
}

uint4 textureLoad_b60a86(texture1d<uint, access::read_write> tint_symbol) {
  uint4 res = tint_symbol.read(uint(tint_clamp(1, 0, int((tint_symbol.get_width(0) - 1u)))));
  return res;
}

kernel void compute_main(device uint4* tint_symbol_1 [[buffer(0)]], texture1d<uint, access::read_write> tint_symbol_2 [[texture(0)]]) {
  *(tint_symbol_1) = textureLoad_b60a86(tint_symbol_2);
  return;
}

