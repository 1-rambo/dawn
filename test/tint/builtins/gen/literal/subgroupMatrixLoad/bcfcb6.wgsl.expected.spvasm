SKIP: FAILED


enable chromium_experimental_subgroup_matrix;

@group(0) @binding(0) var<storage, read_write> prevent_dce : array<u32, 1024>;

struct SB_RO {
  arg_0 : array<u32>,
}

@group(0) @binding(1) var<storage, read> sb_ro : SB_RO;

fn subgroupMatrixLoad_bcfcb6() -> subgroup_matrix_left<u8, 8, 8> {
  var res : subgroup_matrix_left<u8, 8, 8> = subgroupMatrixLoad<subgroup_matrix_left<u8, 8, 8>>(&(sb_ro.arg_0), 1u, true, 8u);
  return res;
}

@compute @workgroup_size(1)
fn compute_main() {
  subgroupMatrixStore(&(prevent_dce), 0, subgroupMatrixLoad_bcfcb6(), false, 64);
}

Failed to generate SPIR-V: :27:46 error: spirv.cooperative_matrix_load: no matching call to 'spirv.cooperative_matrix_load<subgroup_matrix_left<u8, 8, 8>>(ptr<storage, u32, read>, u32, u32, u32)'

1 candidate function:
 • 'spirv.cooperative_matrix_load<T  ✗ >(ptr<workgroup' or 'storage, S, read' or 'read_write>  ✗ , u32  ✓ , u32  ✓ , u32  ✓ ) -> T' where:
      ✗  'T' is 'subgroup_matrix<K, S, C, R>'
      ✗  'S' is 'f32', 'i32', 'u32' or 'f16'

        %13:subgroup_matrix_left<u8, 8, 8> = spirv.cooperative_matrix_load<subgroup_matrix_left<u8, 8, 8>> %12, 1u, 8u, 32u
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

:25:7 note: in block
      $B3: {  # true
      ^^^

:43:16 error: spirv.cooperative_matrix_store: no matching call to 'spirv.cooperative_matrix_store(ptr<storage, u32, read_write>, subgroup_matrix_left<u8, 8, 8>, u32, u32, u32)'

1 candidate function:
 • 'spirv.cooperative_matrix_store(ptr<workgroup' or 'storage, S, write' or 'read_write>  ✓ , subgroup_matrix<K, S, C, R>  ✗ , u32  ✓ , u32  ✓ , u32  ✓ )' where:
      ✓  'S' is 'f32', 'i32', 'u32' or 'f16'

    %21:void = spirv.cooperative_matrix_store %20, %18, 0u, 64u, 32u
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

:39:3 note: in block
  $B4: {
  ^^^

note: # Disassembly
SB_RO = struct @align(4), @block {
  arg_0:array<u32> @offset(0)
}

prevent_dce_block = struct @align(4), @block {
  inner:array<u32, 1024> @offset(0)
}

$B1: {  # root
  %1:ptr<storage, prevent_dce_block, read_write> = var undef @binding_point(0, 0)
  %sb_ro:ptr<storage, SB_RO, read> = var undef @binding_point(0, 1)
}

%subgroupMatrixLoad_bcfcb6 = func():subgroup_matrix_left<u8, 8, 8> {
  $B2: {
    %4:ptr<storage, array<u32>, read> = access %sb_ro, 0u
    %5:u32 = spirv.array_length %sb_ro, 0u
    %6:u32 = mul %5, 4u
    %7:u32 = mul 8u, 7u
    %8:u32 = add 1u, %7
    %9:u32 = add %8, 8u
    %10:bool = lte %9, %6
    %11:ptr<function, subgroup_matrix_left<u8, 8, 8>, read_write> = var undef
    if %10 [t: $B3] {  # if_1
      $B3: {  # true
        %12:ptr<storage, u32, read> = access %4, 1u
        %13:subgroup_matrix_left<u8, 8, 8> = spirv.cooperative_matrix_load<subgroup_matrix_left<u8, 8, 8>> %12, 1u, 8u, 32u
        store %11, %13
        exit_if  # if_1
      }
    }
    %14:subgroup_matrix_left<u8, 8, 8> = load %11
    %res:ptr<function, subgroup_matrix_left<u8, 8, 8>, read_write> = var %14
    %16:subgroup_matrix_left<u8, 8, 8> = load %res
    ret %16
  }
}
%compute_main = @compute @workgroup_size(1i, 1i, 1i) func():void {
  $B4: {
    %18:subgroup_matrix_left<u8, 8, 8> = call %subgroupMatrixLoad_bcfcb6
    %19:ptr<storage, array<u32, 1024>, read_write> = access %1, 0u
    %20:ptr<storage, u32, read_write> = access %19, 0u
    %21:void = spirv.cooperative_matrix_store %20, %18, 0u, 64u, 32u
    ret
  }
}


tint executable returned error: exit status 1
