#include <metal_stdlib>

using namespace metal;
int tint_clamp(int e, int low, int high) {
  return min(max(e, low), high);
}

int4 textureLoad_d3d8fc(texture2d_array<int, access::read_write> tint_symbol) {
  uint2 arg_1 = uint2(1u);
  int arg_2 = 1;
  int4 res = tint_symbol.read(uint2(min(arg_1, (uint2(tint_symbol.get_width(), tint_symbol.get_height()) - uint2(1u)))), tint_clamp(arg_2, 0, int((tint_symbol.get_array_size() - 1u))));
  return res;
}

fragment void fragment_main(device int4* tint_symbol_1 [[buffer(0)]], texture2d_array<int, access::read_write> tint_symbol_2 [[texture(0)]]) {
  *(tint_symbol_1) = textureLoad_d3d8fc(tint_symbol_2);
  return;
}

kernel void compute_main(device int4* tint_symbol_3 [[buffer(0)]], texture2d_array<int, access::read_write> tint_symbol_4 [[texture(0)]]) {
  *(tint_symbol_3) = textureLoad_d3d8fc(tint_symbol_4);
  return;
}

