#include <metal_stdlib>

using namespace metal;
int2 tint_clamp(int2 e, int2 low, int2 high) {
  return min(max(e, low), high);
}

int tint_clamp_1(int e, int low, int high) {
  return min(max(e, low), high);
}

float4 textureLoad_7dd3d5(texture2d_array<float, access::read_write> tint_symbol) {
  int2 arg_1 = int2(1);
  int arg_2 = 1;
  float4 res = tint_symbol.read(uint2(tint_clamp(arg_1, int2(0), int2((uint2(tint_symbol.get_width(), tint_symbol.get_height()) - uint2(1u))))), tint_clamp_1(arg_2, 0, int((tint_symbol.get_array_size() - 1u))));
  return res;
}

fragment void fragment_main(device float4* tint_symbol_1 [[buffer(0)]], texture2d_array<float, access::read_write> tint_symbol_2 [[texture(0)]]) {
  *(tint_symbol_1) = textureLoad_7dd3d5(tint_symbol_2);
  return;
}

kernel void compute_main(device float4* tint_symbol_3 [[buffer(0)]], texture2d_array<float, access::read_write> tint_symbol_4 [[texture(0)]]) {
  *(tint_symbol_3) = textureLoad_7dd3d5(tint_symbol_4);
  return;
}

