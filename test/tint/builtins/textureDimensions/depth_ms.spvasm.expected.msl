//
// vertex_main
//
#include <metal_stdlib>

using namespace metal;
struct tint_private_vars_struct {
  float4 tint_symbol_1;
};

void textureDimensions_f60bdb(depth2d_ms<float, access::read> tint_symbol_5) {
  int2 res = int2(0);
  res = int2(uint2(tint_symbol_5.get_width(), tint_symbol_5.get_height()));
  return;
}

void tint_symbol_2(float4 tint_symbol, thread tint_private_vars_struct* const tint_private_vars) {
  (*(tint_private_vars)).tint_symbol_1 = tint_symbol;
  return;
}

void vertex_main_1(thread tint_private_vars_struct* const tint_private_vars, depth2d_ms<float, access::read> tint_symbol_6) {
  textureDimensions_f60bdb(tint_symbol_6);
  tint_symbol_2(float4(0.0f), tint_private_vars);
  return;
}

struct vertex_main_out {
  float4 tint_symbol_1_1;
};

struct tint_symbol_3 {
  float4 tint_symbol_1_1 [[position]];
};

vertex_main_out vertex_main_inner(thread tint_private_vars_struct* const tint_private_vars, depth2d_ms<float, access::read> tint_symbol_7) {
  vertex_main_1(tint_private_vars, tint_symbol_7);
  vertex_main_out const tint_symbol_4 = vertex_main_out{.tint_symbol_1_1=(*(tint_private_vars)).tint_symbol_1};
  return tint_symbol_4;
}

vertex tint_symbol_3 vertex_main(depth2d_ms<float, access::read> tint_symbol_8 [[texture(0)]]) {
  thread tint_private_vars_struct tint_private_vars = {};
  tint_private_vars.tint_symbol_1 = float4(0.0f);
  vertex_main_out const inner_result = vertex_main_inner(&(tint_private_vars), tint_symbol_8);
  tint_symbol_3 wrapper_result = {};
  wrapper_result.tint_symbol_1_1 = inner_result.tint_symbol_1_1;
  return wrapper_result;
}

//
// fragment_main
//
#include <metal_stdlib>

using namespace metal;
void textureDimensions_f60bdb(depth2d_ms<float, access::read> tint_symbol) {
  int2 res = int2(0);
  res = int2(uint2(tint_symbol.get_width(), tint_symbol.get_height()));
  return;
}

struct vertex_main_out {
  float4 tint_symbol_1_1;
};

void fragment_main_1(depth2d_ms<float, access::read> tint_symbol_1) {
  textureDimensions_f60bdb(tint_symbol_1);
  return;
}

fragment void fragment_main(depth2d_ms<float, access::read> tint_symbol_2 [[texture(0)]]) {
  fragment_main_1(tint_symbol_2);
  return;
}

//
// compute_main
//
#include <metal_stdlib>

using namespace metal;
void textureDimensions_f60bdb(depth2d_ms<float, access::read> tint_symbol) {
  int2 res = int2(0);
  res = int2(uint2(tint_symbol.get_width(), tint_symbol.get_height()));
  return;
}

struct vertex_main_out {
  float4 tint_symbol_1_1;
};

void compute_main_1(depth2d_ms<float, access::read> tint_symbol_1) {
  textureDimensions_f60bdb(tint_symbol_1);
  return;
}

kernel void compute_main(depth2d_ms<float, access::read> tint_symbol_2 [[texture(0)]]) {
  compute_main_1(tint_symbol_2);
  return;
}

